{
	"info": {
		"_postman_id": "4d86925f-66df-43bf-9c92-a72dbf3bd126",
		"name": "User Service API",
		"description": "# User Service API\n\nColección de endpoints para el microservicio de gestión de usuarios.\n\n## Endpoints disponibles\n- Crear usuario\n- Obtener usuario por ID\n- Actualizar usuario\n- Eliminar usuario\n\nIncluye ejemplos de request y response, así como descripciones detalladas de cada endpoint.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8000916"
	},
	"item": [
		{
			"name": "Rol Usuario",
			"item": [
				{
					"name": "crud",
					"item": [
						{
							"name": "Crear",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nombre_usuario\": \"usuario1\",\n  \"email\": \"usuario{{$timestamp}}@email.com\",\n  \"contrasena\": \"Password123!\",\n  \"rol\": \"usuario\"\n}"
								},
								"url": {
									"raw": "http://localhost:{{puerto}}/users",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"users"
									]
								},
								"description": "Crea un nuevo usuario en el sistema.\n\n### Request Body\n- `username` (string, requerido): Nombre de usuario único.\n- `email` (string, requerido): Correo electrónico válido.\n- `password` (string, requerido): Contraseña segura.\n\n### Response\n- **201 Created**: Usuario creado exitosamente.\n- **400 Bad Request**: Datos inválidos o usuario ya existe."
							},
							"response": []
						},
						{
							"name": "Obtener por Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token_user}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:{{puerto}}/users/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"users",
										"1"
									]
								},
								"description": "Obtiene la información de un usuario por su ID.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Response\n- **200 OK**: Usuario encontrado.\n- **404 Not Found**: Usuario no existe."
							},
							"response": []
						},
						{
							"name": "Actualizar por Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token_user}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"usuario1_modificado\",\n  \"email\": \"usuario1nuevo@email.com\",\n  \"password\": \"NuevoPassword123!\"\n}"
								},
								"url": {
									"raw": "http://localhost:{{puerto}}/users/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"users",
										"1"
									]
								},
								"description": "Actualiza la información de un usuario existente.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Request Body\n- `username` (string, opcional): Nuevo nombre de usuario.\n- `email` (string, opcional): Nuevo correo electrónico.\n- `password` (string, opcional): Nueva contraseña.\n\n### Response\n- **200 OK**: Usuario actualizado.\n- **404 Not Found**: Usuario no existe."
							},
							"response": []
						},
						{
							"name": "Eliminar (No permitido por el rol)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token_user}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:{{puerto}}/users/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"users",
										"2"
									]
								},
								"description": "Elimina un usuario del sistema por su ID.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Response\n- **200 OK**: Usuario eliminado.\n- **404 Not Found**: Usuario no existe."
							},
							"response": []
						}
					]
				},
				{
					"name": "Operaciones con token",
					"item": [
						{
							"name": "Refresh token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"{{refresh_token_user}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{puerto}}/auth/refresh",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"auth",
										"refresh"
									]
								},
								"description": "Generated from cURL: curl --location 'http://localhost:8000/auth/refresh' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"refresh_token\": \"TU_REFRESH_TOKEN_AQUI\"\n}'"
							},
							"response": []
						},
						{
							"name": "Revoke token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"{{refresh_token_user}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:{{puerto}}/auth/revoke",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"auth",
										"revoke"
									]
								},
								"description": "Generated from cURL: curl --location 'http://localhost:8000/auth/refresh' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"refresh_token\": \"TU_REFRESH_TOKEN_AQUI\"\n}'"
							},
							"response": []
						},
						{
							"name": "Blacklist",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token_user}}"
									}
								],
								"url": {
									"raw": "http://localhost:{{puerto}}/auth/blacklist",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"auth",
										"blacklist"
									]
								},
								"description": "Generated from cURL: curl --location 'http://localhost:8000/auth/blacklist' \\\n--header 'Authorization: Bearer TU_ACCESS_TOKEN_AQUI'"
							},
							"response": []
						},
						{
							"name": "JWKS público",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token_user}}"
									}
								],
								"url": {
									"raw": "http://localhost:{{puerto}}/auth/blacklist",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "{{puerto}}",
									"path": [
										"auth",
										"blacklist"
									]
								},
								"description": "Generated from cURL: curl --location 'http://localhost:8000/auth/blacklist' \\\n--header 'Authorization: Bearer TU_ACCESS_TOKEN_AQUI'"
							},
							"response": []
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {\r",
									"    const response = pm.response.json();\r",
									"    console.log(\"JSON parseado:\", response);\r",
									"    pm.environment.set(\"access_token_user\", response.access_token);\r",
									"    pm.environment.set(\"token_type_user\", response.token_type);\r",
									"    pm.environment.set(\"refresh_token_user\", response.refresh_token);\r",
									"    \r",
									"    \r",
									"} else {\r",
									"    console.log(\"❌ Error en la respuesta\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "usuario@email.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Password123!",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:{{puerto}}/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"token"
							]
						},
						"description": "Generated from cURL: curl --location 'http://localhost:8000/token' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'username=admin1@email.com' \\\n--data-urlencode 'password=Admin123!'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Rol Admin",
			"item": [
				{
					"name": "Crear",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {\r",
									"    const response = pm.response.json();\r",
									"    console.log(\"JSON parseado:\", response);\r",
									"    pm.environment.set(\"id_admin\", response.usuario_id);   \r",
									"    pm.environment.set(\"email_admin\", response.email); \r",
									"    pm.environment.set(\"user_name_admin\", response.email);    \r",
									"} else {\r",
									"    console.log(\"❌ Error en la respuesta\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre_usuario\": \"admin1\",\n  \"email\": \"admin{{$timestamp}}@email.com\",\n  \"contrasena\": \"Admin123!\",\n  \"rol\": \"admin\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{puerto}}/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"users"
							]
						},
						"description": "Crea un nuevo usuario en el sistema.\n\n### Request Body\n- `username` (string, requerido): Nombre de usuario único.\n- `email` (string, requerido): Correo electrónico válido.\n- `password` (string, requerido): Contraseña segura.\n\n### Response\n- **201 Created**: Usuario creado exitosamente.\n- **400 Bad Request**: Datos inválidos o usuario ya existe."
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {\r",
									"    const response = pm.response.json();\r",
									"    console.log(\"JSON parseado:\", response);\r",
									"    pm.environment.set(\"access_token_admin\", response.access_token);\r",
									"    pm.environment.set(\"token_type_admin\", response.token_type);\r",
									"    pm.environment.set(\"refresh_token_admin\", response.refresh_token);\r",
									"    \r",
									"    \r",
									"} else {\r",
									"    console.log(\"❌ Error en la respuesta\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{email_admin}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Admin123!",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:{{puerto}}/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"token"
							]
						},
						"description": "Generated from cURL: curl --location 'http://localhost:8000/token' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'username=admin1@email.com' \\\n--data-urlencode 'password=Admin123!'"
					},
					"response": []
				},
				{
					"name": "Refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {\r",
									"    const response = pm.response.json();\r",
									"    console.log(\"JSON parseado:\", response);\r",
									"    pm.environment.set(\"access_token_admin\", response.access_token);\r",
									"    pm.environment.set(\"token_type_admin\", response.token_type);\r",
									"    pm.environment.set(\"refresh_token_admin\", response.refresh_token);\r",
									"    \r",
									"    \r",
									"} else {\r",
									"    console.log(\"❌ Error en la respuesta\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token_admin}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{puerto}}/auth/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"auth",
								"refresh"
							]
						},
						"description": "Generated from cURL: curl --location 'http://localhost:8000/auth/refresh' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"refresh_token\": \"TU_REFRESH_TOKEN_AQUI\"\n}'"
					},
					"response": []
				},
				{
					"name": "Obtener por Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{puerto}}/users/{{id_admin}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"users",
								"{{id_admin}}"
							]
						},
						"description": "Obtiene la información de un usuario por su ID.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Response\n- **200 OK**: Usuario encontrado.\n- **404 Not Found**: Usuario no existe."
					},
					"response": []
				},
				{
					"name": "Actualizar por Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{user_name_admin}}\",\n  \"email\": \"usuarioeditado{{$timestamp}}@email.com\",\n  \"password\": \"NuevoPassword123!\"\n}"
						},
						"url": {
							"raw": "http://localhost:{{puerto}}/users/{{id_admin}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"users",
								"{{id_admin}}"
							]
						},
						"description": "Actualiza la información de un usuario existente.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Request Body\n- `username` (string, opcional): Nuevo nombre de usuario.\n- `email` (string, opcional): Nuevo correo electrónico.\n- `password` (string, opcional): Nueva contraseña.\n\n### Response\n- **200 OK**: Usuario actualizado.\n- **404 Not Found**: Usuario no existe."
					},
					"response": []
				},
				{
					"name": "Eliminar (No permitido por el rol)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{puerto}}/users/{{id_admin}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"users",
								"{{id_admin}}"
							]
						},
						"description": "Elimina un usuario del sistema por su ID.\n\n### Path Parameter\n- `id` (integer, requerido): ID del usuario.\n\n### Response\n- **200 OK**: Usuario eliminado.\n- **404 Not Found**: Usuario no existe."
					},
					"response": []
				},
				{
					"name": "Blacklist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token_admin}}"
							}
						],
						"url": {
							"raw": "http://localhost:{{puerto}}/auth/blacklist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{puerto}}",
							"path": [
								"auth",
								"blacklist"
							]
						},
						"description": "Generated from cURL: curl --location 'http://localhost:8000/auth/blacklist' \\\n--header 'Authorization: Bearer TU_ACCESS_TOKEN_AQUI'"
					},
					"response": []
				}
			]
		}
	]
}