{
	"info": {
		"_postman_id": "2696fe30-d01c-4f67-a5da-458d2afcc657",
		"name": "Experimento Seguridad - JWT + RBAC + Redis",
		"description": "# Experimento de Seguridad - JWT + RBAC + Redis\n\nColecci√≥n completa para el experimento de seguridad que incluye:\n- Autenticaci√≥n JWT con RS256\n- Refresh tokens\n- Revocaci√≥n de tokens\n- Blacklist con Redis + SQL fallback\n- JWKS p√∫blico\n- Monitoreo de Redis\n\n## Endpoints disponibles\n- Gesti√≥n de usuarios (CRUD)\n- Autenticaci√≥n (login, refresh, revoke)\n- Autorizaci√≥n (RBAC)\n- Monitoreo (blacklist, Redis status)\n- JWKS p√∫blico",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8000916"
	},
	"item": [
		{
			"name": "Gesti√≥n de Usuarios",
			"item": [
				{
					"name": "Crear usuario",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre_usuario\": \"usuario1\",\n  \"email\": \"usuario1@email.com\",\n  \"contrasena\": \"Password123!\",\n  \"rol\": \"usuario\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/users",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users"]
						},
						"description": "Crea un nuevo usuario en el sistema."
					}
				},
				{
					"name": "Crear administrador",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre_usuario\": \"admin1\",\n  \"email\": \"admin1@email.com\",\n  \"contrasena\": \"Admin123!\",\n  \"rol\": \"admin\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/users",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users"]
						},
						"description": "Crea un nuevo administrador en el sistema."
					}
				},
				{
					"name": "Obtener usuario por ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users", "1"]
						},
						"description": "Obtiene la informaci√≥n de un usuario por su ID (requiere autenticaci√≥n)."
					}
				},
				{
					"name": "Actualizar usuario",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre_usuario\": \"usuario1_modificado\",\n  \"email\": \"usuario1nuevo@email.com\",\n  \"contrasena\": \"NuevoPassword123!\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users", "1"]
						},
						"description": "Actualiza la informaci√≥n de un usuario existente (requiere autenticaci√≥n)."
					}
				},
				{
					"name": "Eliminar usuario (solo admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users", "1"]
						},
						"description": "Elimina un usuario del sistema (solo administradores)."
					}
				}
			]
		},
		{
			"name": "Autenticaci√≥n JWT",
			"item": [
				{
					"name": "Login (crear token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Script para guardar tokens autom√°ticamente",
									"console.log(\"üöÄ Iniciando login...\");",
									"console.log(\"C√≥digo de respuesta:\", pm.response.code);",
									"console.log(\"Respuesta:\", pm.response.text());",
									"",
									"if (pm.response.code === 200) {",
									"    console.log(\"‚úÖ Login exitoso\");",
									"    ",
									"    // Parsear respuesta",
									"    const response = pm.response.json();",
									"    console.log(\"JSON parseado:\", response);",
									"    ",
									"    // Guardar variables",
									"    pm.environment.set(\"access_token\", response.access_token);",
									"    pm.environment.set(\"refresh_token\", response.refresh_token);",
									"    pm.environment.set(\"token_type\", response.token_type);",
									"    pm.environment.set(\"expires_in\", response.expires_in);",
									"    ",
									"    console.log(\"‚úÖ Tokens guardados en variables\");",
									"    ",
									"} else {",
									"    console.log(\"‚ùå Error en login\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "admin1@email.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Admin123!",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8000/token",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["token"]
						},
						"description": "Inicia sesi√≥n y obtiene access_token y refresh_token."
					}
				},
				{
					"name": "Refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Script para guardar nuevo access token",
									"console.log(\"üîÑ Refrescando token...\");",
									"console.log(\"C√≥digo de respuesta:\", pm.response.code);",
									"",
									"if (pm.response.code === 200) {",
									"    console.log(\"‚úÖ Token refrescado exitosamente\");",
									"    ",
									"    const response = pm.response.json();",
									"    console.log(\"Nuevo token:\", response);",
									"    ",
									"    // Guardar nuevo access token",
									"    pm.environment.set(\"access_token\", response.access_token);",
									"    pm.environment.set(\"refresh_token\", response.refresh_token);",
									"    ",
									"    console.log(\"‚úÖ Nuevo access token guardado\");",
									"    ",
									"} else {",
									"    console.log(\"‚ùå Error al refrescar token\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/auth/refresh",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["auth", "refresh"]
						},
						"description": "Refresca el access token usando el refresh token."
					}
				},
				{
					"name": "Revocar token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token_type\": \"access\",\n  \"reason\": \"Logout del usuario\"\n}"
						},
						"url": {
							"raw": "http://localhost:8000/auth/revoke",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["auth", "revoke"]
						},
						"description": "Revoca un token agreg√°ndolo a la blacklist."
					}
				}
			]
		},
		{
			"name": "Monitoreo y JWKS",
			"item": [
				{
					"name": "Ver blacklist (solo admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/auth/blacklist?limit=10",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["auth", "blacklist"],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Obtiene la lista de tokens revocados (solo administradores)."
					}
				},
				{
					"name": "Estado de Redis (solo admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/auth/redis-status",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["auth", "redis-status"]
						},
						"description": "Verifica el estado de conexi√≥n con Redis (solo administradores)."
					}
				},
				{
					"name": "JWKS p√∫blico",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/.well-known/jwks.json",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": [".well-known", "jwks.json"]
						},
						"description": "Obtiene las claves p√∫blicas (JWKS) para validaci√≥n de tokens RS256."
					}
				}
			]
		},
		{
			"name": "Tests de Seguridad",
			"item": [
				{
					"name": "Token expirado (deber√≠a fallar)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRlZmF1bHQifQ.eyJzdWIiOiJhZG1pbjFAZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwidHlwZSI6ImFjY2VzcyIsImV4cCI6MTY5OTk5OTk5OSwiaWF0IjoxNjk5OTk5OTk5LCJpc3MiOiJleHBlcmltZW50by1zZWd1cmlkYWQiLCJhdWQiOiJleHBlcmltZW50by1zZWd1cmlkYWQiLCJqdGkiOiJ0ZXN0LWp0aSJ9.invalid_signature",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users", "1"]
						},
						"description": "Intenta acceder con un token expirado (deber√≠a devolver 401)."
					}
				},
				{
					"name": "Token con rol insuficiente (deber√≠a fallar)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users", "1"]
						},
						"description": "Intenta eliminar usuario con rol de usuario (deber√≠a devolver 403)."
					}
				},
				{
					"name": "Sin token (deber√≠a fallar)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8000",
							"path": ["users", "1"]
						},
						"description": "Intenta acceder sin token (deber√≠a devolver 401)."
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
