@startuml flujo_procesamiento_eventos
title MediSupply - Componente de Inventario\nArquitectura Event-Driven CQRS + Unit of Work

actor Usuario1

participant "Comando" as Command
participant "Consulta" as Query
database "Tabla de Escritura" as WriteDB
queue " Eventos de inventario \nRedis Stream" as Redis
participant "Consumer" as Worker
database "Tabla de Deduplicación" as Dedup
database "Tabla de Lectura" as ReadDB

group Comando: Crear, Actualizar, Eliminar\nUnit of Work
Usuario1 --> Command : Ejecuta comando (ej. ajustar stock)
Command  --> WriteDB : Transacción: actualiza estado
WriteDB  --> Command : Transacción fallida, rollback
WriteDB  --> Redis : Emite evento (ej. ITEM AGREGADO)
Redis  --> Usuario1 : Transacción finalizada
end

group Sincronización Tabla de Lectura\nUnit of Work
Redis  --> Worker : Entrega evento
Worker --> Dedup : Verifica si event_id ya fue procesado
Dedup --> Worker : Ignora eventos procesados
Dedup  --> ReadDB : Actualiza proyección denormalizada 
ReadDB --> Dedup : Marca event_id como procesado
end

group Consulta: Leer
Usuario1 --> Query : Ejecuta consulta (ej. stock disponible)
Query    --> ReadDB : Solicita estado actual
ReadDB   --> Query : Devuelve estado actual
Query    --> Usuario1 : Confirma consulta
end

@enduml